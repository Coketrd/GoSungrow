availability list (optional)
A list of MQTT topics subscribed to receive availability (online/offline) updates. Must not be used together with availability_topic.

payload_available string (optional, default: online)
The payload that represents the available state.

payload_not_available string (optional, default: offline)
The payload that represents the unavailable state.

topic string REQUIRED
An MQTT topic subscribed to receive availability (online/offline) updates.

value_template template (optional)
Defines a template to extract device’s availability from the topic. To determine the devices’s availability result of this template will be compared to payload_available and payload_not_available.

availability_mode string (optional, default: latest)
When availability is configured, this controls the conditions needed to set the entity to available. Valid entries are all, any, and latest. If set to all, payload_available must be received on all configured availability topics before the entity is marked as online. If set to any, payload_available must be received on at least one configured availability topic before the entity is marked as online. If set to latest, the last payload_available or payload_not_available received on any configured availability topic controls the availability.

availability_template template (optional)
Defines a template to extract device’s availability from the availability_topic. To determine the devices’s availability result of this template will be compared to payload_available and payload_not_available.

availability_topic string (optional)
The MQTT topic subscribed to receive availability (online/offline) updates. Must not be used together with availability.

command_topic string (optional)
The MQTT topic to publish commands to control the vacuum.

device map (optional)
Information about the device this switch is a part of to tie it into the device registry. Only works through MQTT discovery and when unique_id is set. At least one of identifiers or connections must be present to identify the device.

configuration_url string (optional)
A link to the webpage that can manage the configuration of this device. Can be either an HTTP or HTTPS link.

connections list (optional)
A list of connections of the device to the outside world as a list of tuples [connection_type, connection_identifier]. For example the MAC address of a network interface: "connections": [["mac", "02:5b:26:a8:dc:12"]].

hw_version string (optional)
The hardware version of the device.

identifiers string | list (optional)
A list of IDs that uniquely identify the device. For example a serial number.

manufacturer string (optional)
The manufacturer of the device.

model string (optional)
The model of the device.

name string (optional)
The name of the device.

suggested_area string (optional)
Suggest an area if the device isn’t in one yet.

sw_version string (optional)
The firmware version of the device.

via_device string (optional)
Identifier of a device that routes messages between this device and Home Assistant. Examples of such devices are hubs, or parent devices of a sub-device. This is used to show device topology in Home Assistant.

encoding string (optional, default: utf-8)
The encoding of the payloads received and published messages. Set to "" to disable decoding of incoming payload.

fan_speed_list string | list (optional)
List of possible fan speeds for the vacuum.

json_attributes_template template (optional)
Defines a template to extract the JSON dictionary from messages received on the json_attributes_topic. Usage example can be found in MQTT sensor documentation.

json_attributes_topic string (optional)
The MQTT topic subscribed to receive a JSON dictionary payload and then set as sensor attributes. Usage example can be found in MQTT sensor documentation.

name string (optional, default: MQTT Vacuum)
The name of the vacuum.

object_id string (optional)
Used instead of name for automatic generation of entity_id

payload_available string (optional, default: online)
The payload that represents the available state.

payload_clean_spot string (optional, default: clean_spot)
The payload to send to the command_topic to begin a spot cleaning cycle.

payload_locate string (optional, default: locate)
The payload to send to the command_topic to locate the vacuum (typically plays a song).

payload_not_available string (optional, default: offline)
The payload that represents the unavailable state.

payload_pause string (optional, default: pause)
The payload to send to the command_topic to pause the vacuum.

payload_return_to_base string (optional, default: return_to_base)
The payload to send to the command_topic to tell the vacuum to return to base.

payload_start string (optional, default: start)
The payload to send to the command_topic to begin the cleaning cycle.

payload_stop string (optional, default: stop)
The payload to send to the command_topic to stop cleaning.

qos integer (optional, default: 0)
The maximum QoS level of the state topic.

retain boolean (optional, default: false)
If the published message should have the retain flag on or not.

schema string (optional, default: legacy)
The schema to use. Must be state to select the state schema.

send_command_topic string (optional)
The MQTT topic to publish custom commands to the vacuum.

set_fan_speed_topic string (optional)
The MQTT topic to publish commands to control the vacuum’s fan speed.

state_topic string (optional)
The MQTT topic subscribed to receive state messages from the vacuum. Messages received on the state_topic must be a valid JSON dictionary, with a mandatory state key and optionally battery_level and fan_speed keys as shown in the example.

supported_features string | list (optional)
List of features that the vacuum supports (possible values are start, stop, pause, return_home, battery, status, locate, clean_spot, fan_speed, send_command).

Default: start, stop, return_home, status, battery, clean_spot
unique_id string (optional)
An ID that uniquely identifies this vacuum. If two vacuums have the same unique ID, Home Assistant will raise an exception.

